package main

import (
	"log"

	"github.com/forbearing/k8s"
	"github.com/forbearing/k8s/deployment"
	corev1 "k8s.io/api/core/v1"
)

func Deployment_Tools() {
	handler, err := deployment.New(ctx, namespace, kubeconfig)
	if err != nil {
		panic(err)
	}
	defer cleanup(handler)

	k8s.ApplyF(ctx, kubeconfig, nginxFile)
	name = "nginx-deploy"

	log.Println(handler.IsReady(name)) // false
	handler.WaitReady(name)            // block until the deployment is ready and available.
	log.Println(handler.IsReady(name)) // true

	// GetPods get all pods that generated by the deployments.
	podList, err := handler.GetPods(name)
	outputPods(podList)

	// GetPVC get all persistentvolumeclaim that attached by the deployment.
	pvcList, err := handler.GetPVC(name)
	log.Println(pvcList)

	// GetPV get all persistentvolume that attached by the deployment.
	pvList, err := handler.GetPV(name)
	log.Println(pvList)

	// cleanup
	k8s.DeleteF(ctx, kubeconfig, nginxFile)

	// Output:

	//2022/07/05 08:33:03 false
	//2022/07/05 08:33:45 true
	//2022/07/05 08:33:45 [nginx-deploy-79979d95dd-v4bkt]
	//2022/07/05 08:33:45 [deploy-k8s-tools-data deploy-nginx-data deploy-nginx-html]
	//2022/07/05 08:33:45 [pvc-fd08839d-eadd-47ea-a21e-380e6c4b7227 pvc-749ab51d-210d-4b1e-bafa-5b8ac758e2e3 pvc-db135fc5-543e-4d20-a7ca-e9afac5882dc]
}

func outputPods(podList []corev1.Pod) {
	var pl []string

	for _, pod := range podList {
		pl = append(pl, pod.Name)
	}
	log.Println(pl)
}
