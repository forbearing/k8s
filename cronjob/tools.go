package cronjob

import (
	batchv1 "k8s.io/api/batch/v1"
)

//// GetJobs get all jobs which generated by the cronjob.
//func (h *Handler) GetJobs(name string) ([]batchv1.Job, error) {
//    jobHandler, err := NewJob(h.ctx, h.namespace, h.kubeconfig)
//    if err != nil {
//        return nil, err
//    }
//    jobList, err := jobHandler.ListByNamespace(h.namespace)
//    if err != nil {
//        return nil, err
//    }

//    var jl []batchv1.Job
//    for _, job := range jobList.Items {
//        for _, ownerRef := range job.OwnerReferences {
//            if ownerRef.Name == name {
//                jl = append(jl, job)
//            }
//        }
//    }
//    return jl, nil
//}

// GetJobs get all jobs which generated by the cronjob.
func (h *Handler) GetJobs(name string) ([]batchv1.Job, error) {
	// list all job in the same namespace as the cronjob
	listOptions := h.Options.ListOptions.DeepCopy()
	listOptions.LabelSelector = ""
	jobList, err := h.clientset.BatchV1().Jobs(h.namespace).List(h.ctx, *listOptions)
	if err != nil {
		return nil, err
	}

	var jl []batchv1.Job
	for _, j := range jobList.Items {
		for _, ownerRef := range j.OwnerReferences {
			if ownerRef.Name == name {
				jl = append(jl, j)
			}
		}
	}
	return jl, nil
}
